# This config file should be saved as $HOME/.gerrymander

#[server]
# If not set defaults to 'review' - setup such an
# alias in your $HOME/.ssh/config if you wish, or
# uncomment these instead
#hostname=review.openstack.org
#port=29418
#username=berrange
#keyfile=/home/berrange/.ssh/id_rsa

#[cache]
# Directory where the results of gerry query commands
# will be cached to avoid re-querying the server
#directory=/home/berrange/.gerrymander.d/cache
# Maximum amount of time to cache data for commands
# whose dataset is large & infrequently changing.
# Defaults to 1 day
#longlifetime=86400
# Maximum amount of time to cache data for commands
# whose dataset is frequently changing.
# Defaults to 5 minutes
#shortlifetime=300

#[organization]
# List the names of teams you use with gerrit. For
# example OpenStack projects have the "Core team"
# concept for people allowed to +2/+A patches. If
# you have multiple teams you can list them comma
# separated
#teams = core

# List the names of groups you use with gerrit.
# Each group will be associated with one or more
# gerrit projects
#groups = nova, neutron

# List of user names associated with automated robots,
# comma separated
#bots=jenkins, turbo-hipster, hyper-v-ci, citrix_xenserver_ci

# Now we list the group info, one section for each
# group defined above
#[group-nova]

# The list of gerrit projects asociated with the group
#projects = openstack/nova, openstack/python-novaclient, openstack/compute-api

# The list of usernames associated with the team 'core' for
# this project
#team-core = jogo, sdague, danms, yunmao, p-draigbrady, mikalstill, russellb, cerberus, markmc, cbehrens, klmitch, johannes.erdfelt, vishvananda, belliott, tr3buchet, devananda, alaski, berrange, johngarbutt

# If you had more than one team defined, then list members
# for next team here

# And the second group...
#[group-neutron]
#projects = openstack/neutron, openstack/python-neutronclient, openstack/netconn-api
#team-core = arosen, amotoki, danwent, emagana, garyk, markmcclain, maru, nati-ueno, rkukura, salvatore-orlando, snaiksat, gongysh

# It is possible to define new commands as aliases for
# existing commands
#[commands]
#aliases=nova-stats

# This is an alias of 'changes' command. The custom
# settings for the command are listed in a later
# section [command-nova-stats], as for any normal
# command
#[alias-nova-changes]
# The name of the original command
#basecmd=changes
# A help text for the new command
#help=Nova open changes


# Each command line tool can have the default values for
# its command line flags set here.
#   - string flags - just the string value
#   - bool flags - 'True' or 'False' (case insensitive)
#   - list flags - comma separated
#[command-patchreviewstats]
#group=nova
#debug=False

#[command-changes]
#sort=createdOn
#branch=master
#field=url, branch, owner, subject:50, lastUpdated, createdOn, approvals
#status=open

# Default values for the alias of changes we defined earlier
# Here we just set the group to be 'nova'. So now intead
# of running 'gerrymander changes --group nova' we can just
# run 'gerrymander nova-changes'
#[command-nova-changes]
#group=nova
